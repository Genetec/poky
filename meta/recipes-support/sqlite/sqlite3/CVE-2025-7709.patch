From 9b5debfbda112c66bd166fcfac849eac8b213a79 Mon Sep 17 00:00:00 2001
From: David Khouya <dkhouya@genetec.com>
Date: Tue, 16 Sep 2025 12:37:55 -0400
Subject: [PATCH] Optimize allocation of large tombstone arrays in fts5.

FossilOrigin-Name: 63595b74956a9391f03a273204c80ecd0ba946846b7aa0195b9095fe8b6a78e5

CVE: CVE-2025-7709
Upstream-Status: Backport [https://github.com/sqlite/sqlite/commit/75b03b9c11e098be39d75e88409e9f223fd7cd31]
---
 sqlite3.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/sqlite3.c b/sqlite3.c
index af3deac..fb42adc 100644
--- a/sqlite3.c
+++ b/sqlite3.c
@@ -240754,9 +240754,9 @@ static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){
 ** leave an error in the Fts5Index object.
 */
 static void fts5SegIterAllocTombstone(Fts5Index *p, Fts5SegIter *pIter){
-  const int nTomb = pIter->pSeg->nPgTombstone;
+  const i64 nTomb = (i64)pIter->pSeg->nPgTombstone;
   if( nTomb>0 ){
-    int nByte = nTomb * sizeof(Fts5Data*) + sizeof(Fts5TombstoneArray);
+    i64 nByte = nTomb * sizeof(Fts5Data*) + sizeof(Fts5TombstoneArray);
     Fts5TombstoneArray *pNew;
     pNew = (Fts5TombstoneArray*)sqlite3Fts5MallocZero(&p->rc, nByte);
     if( pNew ){
